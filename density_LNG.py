# -*- coding: utf-8 -*-
"""
Created on Fri Dec 11 19:40:40 2020

@author: hubertan
"""
import sys
import numpy as np

####Functions#######

def closest_value(lst,value):
    
    lst1=[k for k in lst if value>=k]
    lst1=np.asarray(lst1)
    
    lst2=[k for k in lst if value<k]
    lst2=np.asarray(lst2)
    
    idx1=(np.abs(lst1 - value)).argmin()
    idx2=(np.abs(lst2 - value)).argmin()
    return lst1[idx1],lst2[idx2]

def coefficients(lst,value):
    alpha_1=(closest_value(lst,value)[1]-value)/(closest_value(lst,value)[1]-closest_value(lst,value)[0])
    alpha_2=(value-closest_value(lst,value)[0])/(closest_value(lst,value)[1]-closest_value(lst,value)[0])
    return alpha_1,alpha_2

###Calculation of LNG density following ISO 6578
T=-159.5#Temperature in °C
xi={'CH4':0.8775,'C2H6':0.10564,'C3H8':0.0119,'nC4H10':0,'iC4H10':0,'nC5H12':0,'iC5H12':0,'nC6H14':0,'N2':0.00496,'O2':0}#molar fraction

####Definition of the tables

molar_mass={'CH4':16.0426,'C2H6':30.0694,'C3H8':44.0962,'nC4H10':58.123,'iC4H10':58.123,'nC5H12':72.1498,'iC5H12':72.1498,'nC6H14':86.1766,'N2':28.0134,'O2':31.9988}

k1={16: {-180: -0.01,-175: -0.01,-170: -0.01,-165: -0.01,-160: -0.01,-155: -0.01,-150: -0.01,-145: -0.01,-140: -0.01},
    17: {-180: 0.13,-175: 0.15,-170: 0.16,-165: 0.18,-160: 0.21,-155: 0.24,-150: 0.28,-145: 0.33,-140: 0.38},
    18: {-180: 0.25,-175: 0.29,-170: 0.33,-165: 0.37,-160: 0.41,-155: 0.47,-150: 0.56,-145: 0.66,-140: 0.76},
    19: {-180: 0.37,-175: 0.41,-170: 0.45,-165: 0.51,-160: 0.58,-155: 0.67,-150: 0.76,-145: 0.87,-140: 1.01},
    20: {-180: 0.47,-175: 0.52,-170: 0.59,-165: 0.67,-160: 0.76,-155: 0.86,-150: 0.98,-145: 1.1,-140: 1.3},
    21: {-180: 0.55,-175: 0.62,-170: 0.7,-165: 0.79,-160: 0.89,-155: 1,-150: 1.13,-145: 1.29,-140: 1.45},
    22: {-180: 0.64,-175: 0.72,-170: 0.81,-165: 0.9,-160: 1.01,-155: 1.17,-150: 1.32,-145: 1.52,-140: 1.71},
    23: {-180: 0.72,-175: 0.82,-170: 0.92,-165: 1.02,-160: 1.15,-155: 1.33,-150: 1.53,-145: 1.68,-140: 1.84},
    24: {-180: 0.81,-175: 0.92,-170: 1.04,-165: 1.16,-160: 1.3,-155: 1.47,-150: 1.66,-145: 1.87,-140: 2.13},
    25: {-180: 0.88,-175: 1,-170: 1.12,-165: 1.25,-160: 1.41,-155: 1.58,-150: 1.78,-145: 2,-140: 2.27},
    26: {-180: 0.95,-175: 1.07,-170: 1.19,-165: 1.33,-160: 1.5,-155: 1.68,-150: 1.89,-145: 2.13,-140: 2.41},
    27: {-180: 1.01,-175: 1.13,-170: 1.26,-165: 1.41,-160: 1.58,-155: 1.78,-150: 1.99,-145: 2.24,-140: 2.53},
    28: {-180: 1.06,-175: 1.18,-170: 1.32,-165: 1.47,-160: 1.64,-155: 1.84,-150: 2.06,-145: 2.32,-140: 2.62},
    29: {-180: 1.11,-175: 1.23,-170: 1.37,-165: 1.54,-160: 1.72,-155: 1.92,-150: 2.15,-145: 2.42,-140: 2.73},
    30: {-180: 1.16,-175: 1.29,-170: 1.43,-165: 1.6,-160: 1.79,-155: 2,-150: 2.24,-145: 2.51,-140: 2.83}}

k2={16: {-180: 0,-175: -0.01,-170: -0.01,-165: -0.01,-160: -0.02,-155: -0.03,-150: -0.04,-145: -0.05,-140: -0.07},
    17: {-180: 0.11,-175: 0.15,-170: 0.21,-165: 0.29,-160: 0.46,-155: 0.68,-150: 0.91,-145: 1.21,-140: 1.6},
    18: {-180: 0.26,-175: 0.32,-170: 0.39,-165: 0.53,-160: 0.67,-155: 0.84,-150: 1.05,-145: 1.34,-140: 1.8},
    19: {-180: 0.4,-175: 0.47,-170: 0.57,-165: 0.71,-160: 0.88,-155: 1.13,-150: 1.39,-145: 1.76,-140: 2.22},
    20: {-180: 0.56,-175: 0.62,-170: 0.71,-165: 0.86,-160: 1.06,-155: 1.33,-150: 1.62,-145: 2.03,-140: 2.45},
    21: {-180: 0.67,-175: 0.76,-170: 0.87,-165: 1.01,-160: 1.16,-155: 1.48,-150: 1.85,-145: 2.26,-140: 2.79},
    22: {-180: 0.78,-175: 0.9,-170: 1.01,-165: 1.16,-160: 1.27,-155: 1.65,-150: 2.09,-145: 2.51,-140: 3.13},
    23: {-180: 0.88,-175: 1.03,-170: 1.15,-165: 1.3,-160: 1.42,-155: 1.85,-150: 2.33,-145: 2.81,-140: 3.49},
    24: {-180: 0.98,-175: 1.13,-170: 1.27,-165: 1.45,-160: 1.6,-155: 2.06,-150: 2.58,-145: 3.11,-140: 3.74},
    25: {-180: 1.07,-175: 1.22,-170: 1.38,-165: 1.61,-160: 1.89,-155: 2.28,-150: 2.73,-145: 3.29,-140: 3.97},
    26: {-180: 1.15,-175: 1.31,-170: 1.5,-165: 1.74,-160: 2.04,-155: 2.44,-150: 2.92,-145: 3.48,-140: 4.19},
    27: {-180: 1.22,-175: 1.4,-170: 1.61,-165: 1.87,-160: 2.19,-155: 2.6,-150: 3.1,-145: 3.71,-140: 4.46},
    28: {-180: 1.31,-175: 1.5,-170: 1.72,-165: 1.99,-160: 2.33,-155: 2.77,-150: 3.31,-145: 3.95,-140: 4.74},
    29: {-180: 1.38,-175: 1.59,-170: 1.83,-165: 2.12,-160: 2.48,-155: 2.95,-150: 3.51,-145: 4.19,-140: 5.03},
    30: {-180: 1.47,-175: 1.68,-170: 1.93,-165: 2.24,-160: 2.63,-155: 3.12,-150: 3.72,-145: 4.45,-140: 5.34}}

Vi={'CH4': {-180: 0.035771,-175: 0.036315,-170: 0.036891,-165: 0.0375,-160: 0.038149,-155: 0.038839,-150: 0.03958,-145: 0.040375,-140: 0.041237},
 'C2H6': {-180: 0.046324,-175: 0.046716,-170: 0.047116,-165: 0.047524,-160: 0.047942,-155: 0.048369,-150: 0.048806,-145: 0.049253,-140: 0.049711},
 'C3H8': {-180: 0.060731,-175: 0.061164,-170: 0.061602,-165: 0.062046,-160: 0.062497,-155: 0.062953,-150: 0.063417,-145: 0.063887,-140: 0.064364},
 'nC4H10': {-180: 0.074997,-175: 0.075459,-170: 0.075926,-165: 0.076398,-160: 0.076875,-155: 0.077359,-150: 0.077847,-145: 0.078342,-140: 0.078843},
 'iC4H10': {-180: 0.076384,-175: 0.076868,-170: 0.077356,-165: 0.077851,-160: 0.078352,-155: 0.078859,-150: 0.079374,-145: 0.079896,-140: 0.080425},
 'nC5H12': {-180: 0.089498,-175: 0.090016,-170: 0.090536,-165: 0.091058,-160: 0.091583,-155: 0.092111,-150: 0.092642,-145: 0.093177,-140: 0.093715},
 'iC5H12': {-180: 0.089576,-175: 0.090107,-170: 0.090642,-165: 0.091179,-160: 0.091721,-155: 0.092267,-150: 0.092817,-145: 0.093372,-140: 0.09393},
 'nC6H14': {-180: 0.10273,-175: 0.10326,-170: 0.1038,-165: 0.10434,-160: 0.10489,-155: 0.10545,-150: 0.10602,-145: 0.10659,-140: 0.10716},
 'N2': {-180: 0.038408,-175: 0.039949,-170: 0.041788,-165: 0.044043,-160: 0.047019,-155: 0.051022,-150: 0.055897,-145: 0.061767,-140: 0.069064},
 'O2': {-180: float("nan"),-175: float("nan"),-170: 0.0298,-165: 0.03061,-160: 0.03151,-155: 0.03252,-150: 0.03367,-145: float("nan"),-140: float("nan")}}

SigmaxiMi=0
SigmaxiVi=0

for elt in xi.keys():
    SigmaxiMi+=xi[elt]*molar_mass[elt]
# print(SigmaxiMi)

if T>=-140 or T<-180:
    sys.exit('The temperature should be stricly below -140°C and above -180°C')

lst_xiMi=[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30]
lst_temperature=[-180,-175,-170,-165,-160,-155,-150,-145,-140]

T_inf=closest_value(lst_temperature,T)[0]
T_sup=closest_value(lst_temperature,T)[1]
alpha_T_inf=coefficients(lst_temperature,T)[0]
alpha_T_sup=coefficients(lst_temperature,T)[1]

xiMi_inf=closest_value(lst_xiMi,SigmaxiMi)[0]
xiMi_sup=closest_value(lst_xiMi,SigmaxiMi)[1]
alpha_xiMi_inf=coefficients(lst_xiMi,SigmaxiMi)[0]
alpha_xiMi_sup=coefficients(lst_xiMi,SigmaxiMi)[1]

for elt in ['CH4','C2H6','C3H8','nC4H10','iC4H10','nC5H12','iC5H12','nC6H14','N2','O2']:
    SigmaxiVi+=xi[elt]*(Vi[elt][T_inf]*alpha_T_inf+Vi[elt][T_sup]*alpha_T_sup)

k1_inf=k1[xiMi_inf][T_inf]*alpha_T_inf+k1[xiMi_inf][T_sup]*alpha_T_sup
k1_sup=k1[xiMi_sup][T_inf]*alpha_T_inf+k1[xiMi_sup][T_sup]*alpha_T_sup

k1=(alpha_xiMi_inf*k1_inf+alpha_xiMi_sup*k1_sup)*1e-3


k2_inf=k2[xiMi_inf][T_inf]*alpha_T_inf+k2[xiMi_inf][T_sup]*alpha_T_sup
k2_sup=k2[xiMi_sup][T_inf]*alpha_T_inf+k2[xiMi_sup][T_sup]*alpha_T_sup

k2=(alpha_xiMi_inf*k2_inf+alpha_xiMi_sup*k2_sup)*1e-3

Vc=(k1+(k2-k1)*xi['N2']/0.0425)*xi['CH4']

rho=SigmaxiMi/(SigmaxiVi-Vc)
print('The density is %5.2f kg/m\u00b3' %(rho) )